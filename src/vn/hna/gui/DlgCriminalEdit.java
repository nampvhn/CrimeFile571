/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.hna.gui;

import java.awt.Image;
import java.io.File;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import vn.hna.db.AreasDB;
import vn.hna.db.CriminalsDB;
import vn.hna.db.RolesDB;
import vn.hna.entity.Areas;
import vn.hna.entity.Criminals;
import vn.hna.entity.Roles;
import vn.hna.util.DateTools;

/**
 *
 * @author Edison
 */
public class DlgCriminalEdit extends javax.swing.JDialog {

    FrmMain frmMain = null;
    ButtonGroup bg = null;
    
    PnlCriminal pnl = null;
    Vector<Criminals> v = null;
    int idx = 0;

    /**
     * Creates new form DlgRoleAdd
     */
    public DlgCriminalEdit(FrmMain parent, boolean modal) {
        super(parent, modal);
        frmMain = parent;

        initComponents();

        this.setTitle("Add New Role");
        this.setSize(860, 700);
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(btnSave);
        //this.setResizable(false);

        bg = new ButtonGroup();
        rdoFemale.setActionCommand("Female");
        rdoMale.setActionCommand("Male");
        rdoOther.setActionCommand("Other");
        bg.add(rdoFemale);
        bg.add(rdoMale);
        bg.add(rdoOther);

        loadNationality();
        loadArea();
        
        v = loadDataFromSQLServer();
        idx = pnl.selectedRow;
        this.loadData(v);
        
        setEnableOrDisableButton();
        
        if ("User".equalsIgnoreCase(FrmLogin.roleName)) {
            btnSave.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lblCriminalName = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtIdMark = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblImg1 = new javax.swing.JLabel();
        lblImg2 = new javax.swing.JLabel();
        lblImg3 = new javax.swing.JLabel();
        lblFingerprint = new javax.swing.JLabel();
        btnImg1 = new javax.swing.JButton();
        btnImg2 = new javax.swing.JButton();
        btnImg3 = new javax.swing.JButton();
        btnFingerprint = new javax.swing.JButton();
        txtImg1 = new javax.swing.JTextField();
        txtImg2 = new javax.swing.JTextField();
        txtImg3 = new javax.swing.JTextField();
        txtFingerprint = new javax.swing.JTextField();
        lblNickname = new javax.swing.JLabel();
        txtNickname = new javax.swing.JTextField();
        lblIdCard = new javax.swing.JLabel();
        txtIdCard = new javax.swing.JTextField();
        lblPassportNo = new javax.swing.JLabel();
        txtPassportNo = new javax.swing.JTextField();
        lblNationality = new javax.swing.JLabel();
        cbxNationality = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        rdoFemale = new javax.swing.JRadioButton();
        rdoMale = new javax.swing.JRadioButton();
        rdoOther = new javax.swing.JRadioButton();
        lblIdMark = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        lblOcc = new javax.swing.JLabel();
        txtOcc = new javax.swing.JTextField();
        lblBirthday = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dcrBirthday = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblPrison = new javax.swing.JLabel();
        chkPrisoner = new javax.swing.JCheckBox();
        lblWanted = new javax.swing.JLabel();
        chkWanted = new javax.swing.JCheckBox();
        lblResAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtResAddress = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        lblPerAddress = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPerAddress = new javax.swing.JTextArea();
        lblMental = new javax.swing.JLabel();
        txtMental = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblRelName = new javax.swing.JLabel();
        txtRelName = new javax.swing.JTextField();
        cbxArea = new javax.swing.JComboBox();
        txtCriminalID = new javax.swing.JLabel();
        btFirst = new javax.swing.JButton();
        btPrevious = new javax.swing.JButton();
        btNext = new javax.swing.JButton();
        btLast = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblCriminalName.setText("Criminal Name: ");

        jScrollPane1.setAutoscrolls(true);

        txtIdMark.setColumns(20);
        txtIdMark.setRows(5);
        jScrollPane1.setViewportView(txtIdMark);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("(*)");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));

        btnImg1.setText("Browse");
        btnImg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg1ActionPerformed(evt);
            }
        });

        btnImg2.setText("Browse");
        btnImg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg2ActionPerformed(evt);
            }
        });

        btnImg3.setText("Browse");
        btnImg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg3ActionPerformed(evt);
            }
        });

        btnFingerprint.setText("Browse");
        btnFingerprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFingerprintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImg3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFingerprint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtImg1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnFingerprint, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(txtFingerprint))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnImg3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(btnImg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtImg2)
                                    .addComponent(txtImg3))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImg3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFingerprint, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImg1)
                    .addComponent(txtImg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImg2)
                    .addComponent(txtImg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImg3)
                    .addComponent(txtImg3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFingerprint)
                    .addComponent(txtFingerprint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblNickname.setText("Nickname: ");

        lblIdCard.setText("Identity Card: ");

        lblPassportNo.setText("Passport No: ");

        lblNationality.setText("Nationality: ");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("(*)");

        lblGender.setText("Gender: ");

        rdoFemale.setText("Female");

        rdoMale.setText("Male");

        rdoOther.setText("Other");

        lblIdMark.setText("Identification Mark: ");

        jScrollPane2.setAutoscrolls(true);

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane2.setViewportView(txtDesc);

        lblOcc.setText("Occupuration: ");

        lblBirthday.setText("Birthday: ");

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("(*)");

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("(*)");

        dcrBirthday.setDateFormatString("yyyy-MM-dd");

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("(*)");

        lblDesc.setText("Description: ");

        lblPrison.setText("Is Prisoner: ");

        lblWanted.setText("Is Wanted: ");

        lblResAddress.setText("Residential Address: ");

        jScrollPane3.setAutoscrolls(true);

        txtResAddress.setColumns(20);
        txtResAddress.setRows(5);
        jScrollPane3.setViewportView(txtResAddress);

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("(*)");

        lblPerAddress.setText("Permanent Address: ");

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("(*)");

        jScrollPane4.setAutoscrolls(true);

        txtPerAddress.setColumns(20);
        txtPerAddress.setRows(5);
        jScrollPane4.setViewportView(txtPerAddress);

        lblMental.setText("Mental: ");

        lblArea.setText("Area: ");

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("(*)");

        lblRelName.setText("Relative Name: ");

        txtCriminalID.setText("Criminal ID");

        btFirst.setText("<<");
        btFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFirstActionPerformed(evt);
            }
        });

        btPrevious.setText("<");
        btPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPreviousActionPerformed(evt);
            }
        });

        btNext.setText(">");
        btNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNextActionPerformed(evt);
            }
        });

        btLast.setText(">>");
        btLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lblCriminalName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1)
                            .addGap(10, 10, 10)
                            .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblIdMark)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addComponent(lblDesc)
                            .addComponent(lblMental)
                            .addComponent(lblOcc))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(txtMental)
                            .addComponent(txtOcc)
                            .addComponent(jScrollPane1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassportNo)
                            .addComponent(lblIdCard)
                            .addComponent(lblNickname)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNationality)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblGender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblBirthday)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addComponent(lblPrison)
                            .addComponent(lblWanted))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoFemale)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdoMale)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdoOther))
                                    .addComponent(chkPrisoner)
                                    .addComponent(chkWanted))
                                .addGap(0, 73, Short.MAX_VALUE))
                            .addComponent(txtNickname)
                            .addComponent(txtIdCard, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPassportNo)
                            .addComponent(cbxNationality, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcrBirthday, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblPerAddress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblArea)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addComponent(lblRelName)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblResAddress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4)
                                    .addComponent(cbxArea, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtRelName)))
                            .addComponent(txtCriminalID, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 48, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLast))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addGap(284, 284, 284))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnClear, btnSave});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btFirst, btLast, btNext, btPrevious});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCriminalName)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtCriminalID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblPrison)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblWanted))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkPrisoner)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkWanted)))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNickname)
                            .addComponent(txtNickname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIdCard)
                            .addComponent(txtIdCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassportNo)
                            .addComponent(txtPassportNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNationality)
                            .addComponent(cbxNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(jLabel3)
                            .addComponent(rdoFemale)
                            .addComponent(rdoMale)
                            .addComponent(rdoOther))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBirthday)
                                .addComponent(jLabel4))
                            .addComponent(dcrBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblIdMark)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblResAddress)
                        .addComponent(jLabel6))
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPerAddress)
                        .addComponent(jLabel7))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMental)
                    .addComponent(lblArea)
                    .addComponent(jLabel8)
                    .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOcc)
                    .addComponent(txtOcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRelName)
                    .addComponent(txtRelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFirst)
                    .addComponent(btPrevious)
                    .addComponent(btNext)
                    .addComponent(btLast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnClear)
                    .addComponent(btnCancel))
                .addGap(37, 37, 37))
        );

        jScrollPane5.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtFullName.setText("");
        txtNickname.setText("");
        txtIdCard.setText("");
        txtPassportNo.setText("");
        cbxNationality.setSelectedIndex(0);
        bg.clearSelection();
        dcrBirthday.setCalendar(null);
        txtIdMark.setText("");
        txtDesc.setText("");
        txtMental.setText("");
        txtOcc.setText("");
        txtResAddress.setText("");
        txtPerAddress.setText("");
        cbxArea.setSelectedIndex(0);
        txtImg1.setText("");
        txtImg2.setText("");
        txtImg3.setText("");
        txtFingerprint.setText("");
        lblImg1.setIcon(null);
        lblImg2.setIcon(null);
        lblImg3.setIcon(null);
        lblFingerprint.setIcon(null);
        chkPrisoner.setSelected(false);
        chkWanted.setSelected(false);
        txtRelName.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        CriminalsDB c = new CriminalsDB();
        AreasDB a = new AreasDB();
        DateTools dt = new DateTools();
        boolean isPrisoner = false;
        boolean isWanted = false;
        short gender = 0;

        try {
            String fullName = txtFullName.getText().trim();
            String nickName = txtNickname.getText().trim();
            String idCard = txtIdCard.getText().trim();
            String passportNo = txtPassportNo.getText().trim();
            String nationality = cbxNationality.getSelectedItem().toString().trim();
            Date birthday = dcrBirthday.getDate();
            String idMark = txtIdMark.getText().trim();
            String desc = txtDesc.getText().trim();
            String mental = txtMental.getText().trim();
            String occ = txtOcc.getText().trim();
            String resAddress = txtResAddress.getText().trim();
            String perAddress = txtPerAddress.getText().trim();
            String areaName = cbxArea.getSelectedItem().toString().trim();
            String img1 = txtImg1.getText().trim();
            String img2 = txtImg2.getText().trim();
            String img3 = txtImg3.getText().trim();
            String fingerprint = txtFingerprint.getText().trim();
            String relName = txtRelName.getText().trim();

            // Validate input
            if (null == fullName || "".equals(fullName)) {
                JOptionPane.showMessageDialog(this, "You must input fullname.", "Error", JOptionPane.ERROR_MESSAGE);
                txtFullName.requestFocus();
                return;
            }
            
            if (null == idCard || "".equals(idCard)) {
                if (null == passportNo || "".equals(passportNo)) {
                    JOptionPane.showMessageDialog(this, "You must input identification card or passport No.", "Error", JOptionPane.ERROR_MESSAGE);
                    txtIdCard.requestFocus();
                    return;
                }
            }

            if (null == idMark || "".equals(idMark)) {
                JOptionPane.showMessageDialog(this, "You must input identification mark.", "Error", JOptionPane.ERROR_MESSAGE);
                txtIdMark.requestFocus();
                return;
            }

            if (bg.getSelection() == null) {
                JOptionPane.showMessageDialog(this, "You must choose one gender.", "Error", JOptionPane.ERROR_MESSAGE);
                rdoFemale.requestFocus();
                return;
            }

            if (dcrBirthday.getCalendar() == null) {
                JOptionPane.showMessageDialog(this, "You must input birthday.", "Error", JOptionPane.ERROR_MESSAGE);
                dcrBirthday.requestFocus();
                return;
            }
            
//            if (dt.convertStringToDate(dcrBirthday.getDate().toString(), "yyyy-MM-dd") == null) {
//                JOptionPane.showMessageDialog(this, "Formatted date: yyyy-MM-dd. Example: 2000-10-10", "Error", JOptionPane.ERROR_MESSAGE);
//                dcrBirthday.requestFocus();
//                return;
//            }
            
            if (birthday.after(new Date())) {
                JOptionPane.showMessageDialog(this, "Birthday cannot be a future day.", "Error", JOptionPane.ERROR_MESSAGE);
                dcrBirthday.requestFocus();
                return;
            }

            if (null == resAddress || "".equals(resAddress)) {
                JOptionPane.showMessageDialog(this, "You must input residential address.", "Error", JOptionPane.ERROR_MESSAGE);
                txtResAddress.requestFocus();
                return;
            }

            if (null == perAddress || "".equals(perAddress)) {
                JOptionPane.showMessageDialog(this, "You must input permanent address.", "Error", JOptionPane.ERROR_MESSAGE);
                txtPerAddress.requestFocus();
                return;
            }

            // Insert
            if (chkPrisoner.isSelected()) {
                isPrisoner = true;
            }

            if (chkWanted.isSelected()) {
                isWanted = true;
            }

            if (bg.getSelection().getActionCommand().equalsIgnoreCase("Female")) {
                gender = 0;
            } else {
                if (bg.getSelection().getActionCommand().equalsIgnoreCase("Male")) {
                    gender = 1;
                } else {
                    gender = 2;
                }
            }

            Areas area = a.getAreaByName(areaName);

            int id = Integer.parseInt(txtCriminalID.getText().trim());
            if (c.update(id, fullName, nickName, idCard, passportNo, nationality, gender, birthday, idMark, desc, mental, occ, resAddress, perAddress, area, fingerprint, img1, img2, img3, isPrisoner, isWanted, relName)) {
                JOptionPane.showMessageDialog(this, "Updated successful.", "Message", JOptionPane.INFORMATION_MESSAGE);
                PnlCriminal pnl = new PnlCriminal();
                this.dispose();
                pnl.setVisible(true);

                pnl.tblModel.fireTableDataChanged();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnImg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg1ActionPerformed
        uploadImage(lblImg1, txtImg1);
    }//GEN-LAST:event_btnImg1ActionPerformed

    private void btnImg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg2ActionPerformed
        uploadImage(lblImg2, txtImg2);
    }//GEN-LAST:event_btnImg2ActionPerformed

    private void btnImg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg3ActionPerformed
        uploadImage(lblImg3, txtImg3);
    }//GEN-LAST:event_btnImg3ActionPerformed

    private void btnFingerprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFingerprintActionPerformed
        uploadImage(lblFingerprint, txtFingerprint);
    }//GEN-LAST:event_btnFingerprintActionPerformed

    private void btFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFirstActionPerformed
        try {
            idx = 0;
            chkPrisoner.setSelected(false);
            chkWanted.setSelected(false);
            loadData(v);
            setEnableOrDisableButton();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btFirstActionPerformed

    private void btPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPreviousActionPerformed
        try {
            idx--;
            if (idx < 0) {
                idx = 0;
            }
            chkPrisoner.setSelected(false);
            chkWanted.setSelected(false);
            loadData(v);
            setEnableOrDisableButton();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btPreviousActionPerformed

    private void btNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNextActionPerformed
        try {
            idx++;
            if (idx > v.size() - 1) {
                idx = v.size() - 1;
            }
            chkPrisoner.setSelected(false);
            chkWanted.setSelected(false);
            loadData(v);
            setEnableOrDisableButton();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btNextActionPerformed

    private void btLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLastActionPerformed
        try {
            idx = v.size() - 1;
            chkPrisoner.setSelected(false);
            chkWanted.setSelected(false);
            loadData(v);
            setEnableOrDisableButton();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btLastActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DlgRoleAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DlgRoleAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DlgRoleAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DlgRoleAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DlgRoleAdd dialog = new DlgRoleAdd(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFirst;
    private javax.swing.JButton btLast;
    private javax.swing.JButton btNext;
    private javax.swing.JButton btPrevious;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnFingerprint;
    private javax.swing.JButton btnImg1;
    private javax.swing.JButton btnImg2;
    private javax.swing.JButton btnImg3;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbxArea;
    private javax.swing.JComboBox cbxNationality;
    private javax.swing.JCheckBox chkPrisoner;
    private javax.swing.JCheckBox chkWanted;
    private com.toedter.calendar.JDateChooser dcrBirthday;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblCriminalName;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblFingerprint;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblIdCard;
    private javax.swing.JLabel lblIdMark;
    private javax.swing.JLabel lblImg1;
    private javax.swing.JLabel lblImg2;
    private javax.swing.JLabel lblImg3;
    private javax.swing.JLabel lblMental;
    private javax.swing.JLabel lblNationality;
    private javax.swing.JLabel lblNickname;
    private javax.swing.JLabel lblOcc;
    private javax.swing.JLabel lblPassportNo;
    private javax.swing.JLabel lblPerAddress;
    private javax.swing.JLabel lblPrison;
    private javax.swing.JLabel lblRelName;
    private javax.swing.JLabel lblResAddress;
    private javax.swing.JLabel lblWanted;
    private javax.swing.JRadioButton rdoFemale;
    private javax.swing.JRadioButton rdoMale;
    private javax.swing.JRadioButton rdoOther;
    private javax.swing.JLabel txtCriminalID;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtFingerprint;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtIdCard;
    private javax.swing.JTextArea txtIdMark;
    private javax.swing.JTextField txtImg1;
    private javax.swing.JTextField txtImg2;
    private javax.swing.JTextField txtImg3;
    private javax.swing.JTextField txtMental;
    private javax.swing.JTextField txtNickname;
    private javax.swing.JTextField txtOcc;
    private javax.swing.JTextField txtPassportNo;
    private javax.swing.JTextArea txtPerAddress;
    private javax.swing.JTextField txtRelName;
    private javax.swing.JTextArea txtResAddress;
    // End of variables declaration//GEN-END:variables

    public void loadNationality() {
        String[] nal = new String[]{"Afghan", "Albanian", "Algerian", "American", "Andorran", "Angolan", "Antiguans", "Argentinean", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Barbudans", "Batswana", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burmese", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdean", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinea-Bissauan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "I-Kiribati", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kittian and Nevisian", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourger", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivan", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monacan", "Mongolian", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Taiwanese", "Tajik", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian or Tobagonian", "Tunisian", "Turkish", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemenite", "Zambian", "Zimbabwean"};
        for (int i = 0; i < nal.length; i++) {
            cbxNationality.addItem(nal[i]);
        }
    }

    public void loadArea() {
        AreasDB a = new AreasDB();
        List<Areas> list = a.viewAreas();
        for (Areas area : list) {
            cbxArea.addItem(area.getAreaName());
        }
    }

    public void uploadImage(JLabel label, JTextField txt) {
        try {
            JFileChooser fileChooser = new JFileChooser();
            FileFilter fileFilter = new FileNameExtensionFilter("Image file", "jpeg", "jpg", "png", "gif");
            fileChooser.setFileFilter(fileFilter);
            fileChooser.setMultiSelectionEnabled(false);

            int action = fileChooser.showOpenDialog(this);
            if (action == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                ImageIcon imgIcon = new ImageIcon(new ImageIcon(file.getAbsolutePath()).getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH));
                label.setIcon(imgIcon);
                txt.setText(imgIcon.getDescription());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String getPath(ImageIcon imgIcon) {
        String path = "";
        try {
            path = imgIcon.getDescription();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return path;
    }
    
    private void setEnableOrDisableButton() {
        try {
            if (v == null || v.size() < 2) {
                btFirst.setEnabled(false);
                btPrevious.setEnabled(false);
                btNext.setEnabled(false);
                btLast.setEnabled(false);
            }
            else {
                if (idx == 0) {
                    btFirst.setEnabled(false);
                    btPrevious.setEnabled(false);
                    btNext.setEnabled(true);
                    btLast.setEnabled(true);
                } else if (idx == v.size() - 1) {
                    btFirst.setEnabled(true);
                    btPrevious.setEnabled(true);
                    btNext.setEnabled(false);
                    btLast.setEnabled(false);
                } else {
                    btFirst.setEnabled(true);
                    btPrevious.setEnabled(true);
                    btNext.setEnabled(true);
                    btLast.setEnabled(true);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void loadData(Vector<Criminals> v) {
        DateTools dt = new DateTools();
        try {
            if (v.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No data.", "Information", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (idx > v.size() - 1) {
                JOptionPane.showMessageDialog(this, "Out of index.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Criminals entity = v.get(idx);
            txtCriminalID.setText(new Integer(entity.getCriminalID()).toString());
            txtFullName.setText(entity.getFullName());
            txtIdCard.setText(entity.getIdentityCard());
            txtPassportNo.setText(entity.getPassportNo());
            txtNickname.setText(entity.getNickName());
            cbxNationality.setSelectedItem(entity.getNationality());
            if (entity.getGender() == 0) {
                rdoFemale.setSelected(true);
            } else {
                if (entity.getGender() == 1) {
                    rdoMale.setSelected(true);
                } else {
                    rdoOther.setSelected(true);
                }
            }
            Date d = entity.getBirthday();
            dcrBirthday.setDate(d);
            txtIdMark.setText(entity.getIdentificationMark());
            txtDesc.setText(entity.getDescription());
            txtMental.setText(entity.getMental());
            txtOcc.setText(entity.getOccupation());
            txtResAddress.setText(entity.getResidentialAddress());
            txtPerAddress.setText(entity.getPermanentAddress());
            cbxArea.setSelectedItem(entity.getAreaID().getAreaName());
            
            txtImg1.setText(entity.getImage1());
            txtImg2.setText(entity.getImage2());
            txtImg3.setText(entity.getImage3());
            txtFingerprint.setText(entity.getFingerprint());
            
            setImage(lblImg1, txtImg1.getText().trim());
            setImage(lblImg2, txtImg2.getText().trim());
            setImage(lblImg3, txtImg3.getText().trim());
            setImage(lblFingerprint, txtFingerprint.getText().trim());
            
            if (entity.getIsPrisonner() == true) {
                chkPrisoner.setSelected(true);
            }
            if (entity.getIsMostWanted() == true) {
                chkWanted.setSelected(true);
            }
            txtRelName.setText(entity.getRelativeName());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public Vector loadDataFromSQLServer() {
        CriminalsDB c = new CriminalsDB();
        try {
            return (Vector) c.viewCriminals();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    
    public void setImage(JLabel label, String path) {
        try {
            File file = new File(path);
            //ImageIcon imgIcon = new ImageIcon(file.getAbsolutePath());
            ImageIcon imgIcon = new ImageIcon(new ImageIcon(file.getAbsolutePath()).getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH));
            label.setIcon(imgIcon);

//            BufferedImage img = null;
//            img = ImageIO.read(new File(path));
//            BufferedImage dimg = (BufferedImage) img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
//            ImageIcon imageIcon = new ImageIcon(dimg);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
